#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass report
\use_default_options true
\master ../thesis.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 2.5cm
\rightmargin 3cm
\bottommargin 4cm
\headsep 1cm
\footskip 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle empty
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{plain}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Abstract
\end_layout

\begin_layout Standard
Da sempre l’essere umano acquisisce dati dal mondo esterno per inferirne
 informazioni utili ad un ampliamento della conoscenza o ad un processo
 decisionale.
\end_layout

\begin_layout Standard
Negli ultimi anni si assiste ad una proliferazione di dati mai vista prima
 d’ora.
 Il tasso di produzione è così elevato che ad oggi siamo in grado di generare
 più dati di quanto non sia possibile analizzarne.
 Ognuno di noi è al contempo fruitore e produttore, talvolta incosapevole,
 di grandi masse di dati eterogenei ad alto potenziale informativo.
 Tali tendenze sono destinate a crescere e diffondersi sempre più rapidamente.
 Ciò è dovuto alla naturale sinergia tra l'evoluzione di tecnologie abilitanti,
 la propensione all'interazione digitale, e l'affermazione sul mercato di
 compagnie, beni e servizi dal core business sempre più data-oriented.
 Questa sinergia ha così distribuito, potenziato e reso accessibile la capacità
 di produzione ed acquisizione di dati, al punto da mettere in ginocchio
 le soluzioni adottate dai tradizionali sistemi di processamento.
 Ciò ha reso necessario lo sviluppo di tecnologie basate su paradigmi computazio
nali nuovi, totalmente orientati al processamento tempestivo di ingenti
 flussi di dati.
 
\end_layout

\begin_layout Standard
All'aumentare della frequenza di produzione dei dati, diminuisce la finestra
 temporale entro la quale uno specifico dato può assumere valore informativo.
 Un numero crescente di applicazioni richiede dunque un processamento sempre
 più tempestivo di flussi continui di dati prodotti da sorgenti distribuite
 ed eterogenee, diretti al centro logico del sistema, ovvero laddove l'informazi
one viene resa fruibile.
 Tali sorgenti sono distribuite geograficamente su vasta scala con densità
 e miniaturizzazioni crescenti.
 La loro eterogeneità riguarda la natura dei dati prodotti e la frequenza
 di produzione.
 
\end_layout

\begin_layout Standard
In un tale scenario, l'ottimizzazione dei processi di acquisizione, distribuzion
e ed elaborazione dei dati non è solo un affascinante esercizio accademico,
 bensì una vera e propria scelta di business, finanche una prerogativa al
 successo.
\end_layout

\begin_layout Standard
In questo lavoro di tesi forniamo una formulazione in programmazione lineare
 binaria del problema del posizionamento degli operatori in una applicazione
 di Data Stream Processing.
 Siamo infatti convinti della crescente importanza dello studio e sviluppo
 di modelli di ottimizzazione per i nuovi paradigmi di processamento dati.
 Il nostro obiettivo è dunque la ricerca di una formulazione quanto più
 possibile efficiente, di modo che possa risultare un utile bechmark per
 lo sviluppo di soluzioni euristiche al problema.
\end_layout

\begin_layout Standard
Forniamo dapprima una panoramica sui Big Data, spiegando come tale fenomeno
 renda necessario lo sviluppo di nuovi paradigmi computazionali per il processam
ento dei dati, e mostrando come tali paradigmi si allontanino dalle soluzioni
 tradizionali.
 Introduciamo dunque il concetto di sistema di Information Flow Processing
 (IFP), spiegando come in esso possano essere riconosciuti i sistemi di
 Complex Event Processing (CEP) e di Data Stream Processing (DSP).
 Tale panoramica ci armerà degli strumenti necessari a comprendere la natura
 del problema in esame.
\end_layout

\begin_layout Standard
Il problema del posizionamento degli operatori nel Data Stream Processing
 consiste nell'assegnare l'esecuzione delle unità procedurali di una applicazion
e DSP ai nodi computazionali di una architettura distribuita.
 Una applicazione DSP è rappresentata da un grafo diretto aciclico che incapsula
 le relazioni fra gli operatori e i dettagli relativi alla loro domanda
 computazionale.
 Una architettura distribuita è rappresentata da un grafo diretto completamente
 connesso che incapsula le potenzialità operative e la connettività delle
 risorse computazionali.
 Quando il processamento di un flusso continuo di dati è distribuito su
 risorse computazionali e trasmissive distinte, determinare una soluzione
 di posizionamento quanto più possibile prossima all'ottimalità è di fondamental
e importanza per garantire l'efficienza e l'affidabilità della applicazione.
\end_layout

\begin_layout Standard
Proponiamo tre formulazioni in programmazione lineare binaria del problema
 di posizionamento degli operatori.
 Partendo da una prima formulazione di base, abbiamo potuto infatti ricavare
 le due seguenti apportando opportue modifiche al dominio delle variabili
 decisionali e a due vincoli di ammissibilità.
\end_layout

\begin_layout Standard
I modelli di ottimizzazione proposti sono stati dapprima implementati in
 OPL all'interno dell'ambiente di sviluppo integrato IBM CPlex Optimization
 Studio.
 Tale approccio ci ha garantito una prototipazione rapida dei modelli, al
 fine di verificarne quanto prima consistenza ed efficienza su piccole istanze
 ad hoc.
 Questi modelli sono stati poi implementati in Java, facendo uso della libreria
 IBM CPlex Concert Technology per la loro compilazione e risoluzione.
 L'implementazione in Java ci ha permesso il totale controllo delle istanze
 del problema, così da poter verificare l'efficienza dei modelli quando
 applicati a scenari più complessi e realistici.
 
\end_layout

\begin_layout Standard
I modelli sono stati successivamente sottoposti ad una analisi sperimentale,
 volta a compararne le prestazioni in funzione della dimensione e distribuzione
 dell'istanza.
 Le metriche utilizzate per quantificare la prestazioni sono state il tempo
 di creazione ed il tempo di risoluzione.
\end_layout

\begin_layout Standard
I risultati ottenuti sono molto positivi, in quanto dimostrano il netto
 miglioramento prestazionale della formulazione finale rispetto a quella
 di partenza.
\end_layout

\end_body
\end_document
